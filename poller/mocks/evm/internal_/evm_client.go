// Code generated by mockery. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"

	models "github.com/coherent-api/contract-poller/poller/pkg/models"
)

// EvmClient is an autogenerated mock type for the EvmClient type
type EvmClient struct {
	mock.Mock
}

// GetContract provides a mock function with given fields: ctx, contractAddress
func (_m *EvmClient) GetContract(ctx context.Context, contractAddress string) (*models.Contract, error) {
	ret := _m.Called(ctx, contractAddress)

	var r0 *models.Contract
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, string) (*models.Contract, error)); ok {
		return rf(ctx, contractAddress)
	}
	if rf, ok := ret.Get(0).(func(context.Context, string) *models.Contract); ok {
		r0 = rf(ctx, contractAddress)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.Contract)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(ctx, contractAddress)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewEvmClient interface {
	mock.TestingT
	Cleanup(func())
}

// NewEvmClient creates a new instance of EvmClient. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewEvmClient(t mockConstructorTestingTNewEvmClient) *EvmClient {
	mock := &EvmClient{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
